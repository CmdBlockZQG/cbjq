"use strict";function Solve(r,e){res=[],m=r.length,n=r[0].length,a=new Array(m);for(var o=0;o<m;++o)a[o]=r[o].map(function(r){return r});return l=e.map(function(r){return r}),dfs(0),res}function canPlaceBlock(r,e,o,l){for(var t=blocks[o][l],f=0;!t[0][f];)++f;if((e-=f)<0)return!1;for(var c=0;c<t.length;++c)for(var i=0;i<t[0].length;++i)if(t[c][i]&&(r+c>=m||e+i>=n||-1!==a[r+c][e+i]))return!1;return!0}function placeBlock(r,n,e,o,l){for(var t=blocks[e][o],f=0;!t[0][f];)++f;n-=f;for(var c=0;c<t.length;++c)for(var i=0;i<t[0].length;++i)t[c][i]&&(a[r+c][n+i]=l)}function dfs(r){if(r===m*n){for(var e=new Array(m),o=0;o<m;++o)e[o]=a[o].map(function(r){return r});return res.push(e),res.length>=1e4&&(alert("方案数太多，仅计算前一万种。减少一些方块吧~"),!0)}var t=Math.floor(r/n),f=r%n;if(-1!==a[t][f])return!!dfs(r+1);for(var c=0;c<blocks.length;++c)if(l[c])for(var i=0;i<blocks[c].length;++i)if(canPlaceBlock(t,f,c,i)){if(placeBlock(t,f,c,i,c+1),--l[c],dfs(r+1))return!0;++l[c],placeBlock(t,f,c,i,-1)}return!1}var blocks=[[[[1,1],[1,1]]],[[[2,2,2,2]],[[2],[2],[2],[2]]],[[[3,3,0],[0,3,3]],[[0,3],[3,3],[3,0]]],[[[0,4,4],[4,4,0]],[[4,0],[4,4],[0,4]]],[[[5,0,0],[5,5,5]],[[5,5],[5,0],[5,0]],[[5,5,5],[0,0,5]],[[0,5],[0,5],[5,5]]],[[[0,0,6],[6,6,6]],[[6,6],[0,6],[0,6]],[[6,6,6],[6,0,0]],[[6,0],[6,0],[6,6]]],[[[0,7,0],[7,7,7]],[[7,7,7],[0,7,0]],[[7,0],[7,7],[7,0]],[[0,7],[7,7],[0,7]]],[[[0,8,0],[8,8,8],[0,8,0]]],[[[9]]],[[[10,10]],[[10],[10]]],[[[11,11],[11,0]],[[11,11],[0,11]],[[0,11],[11,11]],[[11,0],[11,11]]]],m=void 0,n=void 0,a=void 0,l=void 0,res=void 0;